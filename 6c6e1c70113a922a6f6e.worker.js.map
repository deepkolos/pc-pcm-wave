{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/wave-resampler/lib/interpolator.js","webpack:///../node_modules/wave-resampler/index.js","webpack:///./libs/recorder.worker.js","webpack:///../node_modules/wave-resampler/lib/fir-lpf.js","webpack:///../node_modules/wave-resampler/lib/butterworth-lpf.js","webpack:///./libs/shortTimeEnergy.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window_","x","Math","exp","sincKernel_","window","sin","PI","sinc_","resample","samples","oldSampleRate","sampleRate","details","newSamples","Float64Array","length","method","interpolator","Interpolator","tension","sincFilterSize","sincWindow","undefined","LPF","DEFAULT_LPF_USE","LPFType","DEFAULT_LPF","filter","len","interpolate","reset","upsample_","LPFOrder","DEFAULT_LPF_ORDER","resample_","downsample_","mergeArray","list","data","Float32Array","offset","set","writeUTFBytes","view","string","lng","setUint8","charCodeAt","scaleFrom","scaleTo","this","length_","scaleFactor_","cubic","point","linear","sinc","tangentFactor_","max","min","sincFilterSize_","kernel_","getClippedInput_","round","k","floor","getTangent_","t2","t3","ref1","sum","FIRLPF","order","cutOff","omega","dc","filters","cos","z","initZ_","sample","buf","pointer","out","push","getCoeffs_","Fs","Fc","Q","stages","b0","b","b1","b2","a1","a","a2","runStage_","params","coeffs","preCalc_","cw","a0","pre","w","alpha","input","temp","shortTimeEnergy","audioData","energy","self","addEventListener","event","type","audioBuffers","inputSampleRate","outputSampleRate","postMessage","channels","buffer","ArrayBuffer","DataView","setUint32","setUint16","index","setInt16","createWavBuffer"],"mappings":"aAIE,SAASA,EAAoBC,GAG5B,GAAGC,EAAiBD,GACnB,OAAOC,EAAiBD,GAAUE,QAGnC,IAAIC,EAASF,EAAiBD,GAAY,CACzCI,EAAGJ,EACHK,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQN,GAAUO,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOE,GAAI,EAGJF,EAAOD,QAvBf,IAAID,EAAmB,GA4BvBF,EAAoBS,EAAIF,EAGxBP,EAAoBU,EAAIR,EAGxBF,EAAoBW,EAAI,SAASR,EAASS,EAAMC,GAC3Cb,EAAoBc,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEb,EAAoBmB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDtB,EAAoBuB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQtB,EAAoBsB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA3B,EAAoBmB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOtB,EAAoBW,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIR1B,EAAoB8B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBW,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRb,EAAoBc,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzGhC,EAAoBmC,EAAI,gBAIjBnC,EAAoBA,EAAoBoC,EAAI,Q,oCC8FrD,SAASC,EAAQC,GACf,OAAOC,KAAKC,KAAKF,EAAI,EAAIA,EAAI,GAQ/B,SAASG,EAAYC,GACnB,OAAO,SAASJ,GAAK,OAQvB,SAAeA,GACb,GAAU,IAANA,EACF,OAAO,EAET,OAAOC,KAAKI,IAAIJ,KAAKK,GAAKN,IAAMC,KAAKK,GAAKN,GAZdO,CAAMP,GAAKI,EAAOJ,ICpHzC,SAASQ,EAASC,EAASC,EAAeC,EAAYC,QAAY,IAAZA,MAAQ,IAEnE,IACIC,EAAa,IAAIC,aAAaL,EAAQM,SAD7BJ,EAAaD,GAAiBA,EAAiB,IAG5DE,EAAQI,OAASJ,EAAQI,QAAU,QACnC,IAAIC,EAAe,IAAIC,EACrBT,EAAQM,OACRF,EAAWE,OACX,CACEC,OAAQJ,EAAQI,OAChBG,QAASP,EAAQO,SAAW,EAC5BC,eAAgBR,EAAQQ,gBAAkB,EAC1CC,WAAYT,EAAQS,iBAAcC,IAMtC,QAHoBA,IAAhBV,EAAQW,MACVX,EAAQW,IAAMC,EAAgBZ,EAAQI,SAEpCJ,EAAQW,IAAK,CACfX,EAAQa,QAAUb,EAAQa,SAAW,MACrC,IAAMF,EAAMG,EAAYd,EAAQa,SAEhC,GAAId,EAAaD,GA6CrB,SAAmBD,EAASI,EAAYI,EAAcU,GAEpD,IAAK,IAAI5D,EAAI,EAAG6D,EAAMf,EAAWE,OAAQhD,EAAI6D,EAAK7D,IAChD8C,EAAW9C,GAAK4D,EAAOA,OAAOV,EAAaY,YAAY9D,EAAG0C,IAG5DkB,EAAOG,QACP,IAAK,IAAI/D,EAAI8C,EAAWE,OAAS,EAAGhD,GAAK,EAAGA,IAC1C8C,EAAW9C,GAAM4D,EAAOA,OAAOd,EAAW9C,IAhDxCgE,CACEtB,EAASI,EAAYI,EALV,IAAIM,EACfX,EAAQoB,UAAYC,EAAkBrB,EAAQa,SAC9Cd,EACCD,EAAgB,SA6DzB,SAAqBD,EAASI,EAAYI,EAAcU,GAEtD,IAAK,IAAI5D,EAAI,EAAG6D,EAAMnB,EAAQM,OAAQhD,EAAI6D,EAAK7D,IAC7C0C,EAAQ1C,GAAM4D,EAAOA,OAAOlB,EAAQ1C,IAGtC4D,EAAOG,QACP,IAAK,IAAI/D,EAAI0C,EAAQM,OAAS,EAAGhD,GAAK,EAAGA,IACvC0C,EAAQ1C,GAAM4D,EAAOA,OAAOlB,EAAQ1C,IAGtCmE,EAAUzB,EAASI,EAAYI,GA/D3BkB,CACE1B,EAASI,EAAYI,EALV,IAAIM,EACfX,EAAQoB,UAAYC,EAAkBrB,EAAQa,SAC9Cf,EACAC,EAAa,SAMjBuB,EAAUzB,EAASI,EAAYI,GAEjC,OAAOJ,EAUT,SAASqB,EAAUzB,EAASI,EAAYI,GAEtC,IAAK,IAAIlD,EAAI,EAAG6D,EAAMf,EAAWE,OAAQhD,EAAI6D,EAAK7D,IAChD8C,EAAW9C,GAAKkD,EAAaY,YAAY9D,EAAG0C,GCzHhD,SAAS2B,EAAWC,GAIlB,IAHA,IACMC,EAAO,IAAIC,aADFF,EAAKtB,OAASsB,EAAK,GAAGtB,QAEjCyB,EAAS,EACJzE,EAAI,EAAGA,EAAIsE,EAAKtB,OAAQhD,IAC/BuE,EAAKG,IAAIJ,EAAKtE,GAAIyE,GAClBA,GAAUH,EAAKtE,GAAGgD,OAEpB,OAAOuB,EAeT,SAASI,EAAcC,EAAMH,EAAQI,GAEnC,IADA,IAAIC,EAAMD,EAAO7B,OACRhD,EAAI,EAAGA,EAAI8E,EAAK9E,IACvB4E,EAAKG,SAASN,EAASzE,EAAG6E,EAAOG,WAAWhF,I,OFGzC,IAAMmD,EAAb,WAOE,WAAY8B,EAAWC,EAASrC,GAK9BsC,KAAKC,QAAUH,EAKfE,KAAKE,cAAgBJ,EAAY,GAAKC,EAKtCC,KAAKrB,YAAcqB,KAAKG,MACD,UAAnBzC,EAAQI,OACXkC,KAAKrB,YAAcqB,KAAKI,MACI,WAAnB1C,EAAQI,OACjBkC,KAAKrB,YAAcqB,KAAKK,OACI,SAAnB3C,EAAQI,SACjBkC,KAAKrB,YAAcqB,KAAKM,MAMzBN,KAAKO,eAAiB,EAAIxD,KAAKyD,IAAI,EAAGzD,KAAK0D,IAAI,EAAG/C,EAAQO,SAAW,IAMrE+B,KAAKU,gBAAkBhD,EAAQQ,gBAAkB,EAKjD8B,KAAKW,QAAU1D,EAAYS,EAAQS,YAActB,GA7CrD,2BAqDEuD,MAAA,SAAMrE,EAAGwB,GACP,OAAOyC,KAAKY,iBAAiB7D,KAAK8D,MAAMb,KAAKE,aAAenE,GAAIwB,IAtDpE,EA8DE8C,OAAA,SAAOtE,EAAGwB,GACRxB,GAAIiE,KAAKE,aACT,IAAIY,EAAI/D,KAAKgE,MAAMhF,GAEnB,OAAQ,GADRA,GAAK+E,IAEJd,KAAKY,iBAAiBE,EAAGvD,GAAWxB,EACpCiE,KAAKY,iBAAiBE,EAAI,EAAGvD,IApElC,EA4EE4C,MAAA,SAAMpE,EAAGwB,GACPxB,GAAIiE,KAAKE,aACT,IAAIY,EAAI/D,KAAKgE,MAAMhF,GACfd,EAAI,CAAC+E,KAAKgB,YAAYF,EAAGvD,GAAUyC,KAAKgB,YAAYF,EAAI,EAAGvD,IAC3DZ,EAAI,CAACqD,KAAKY,iBAAiBE,EAAGvD,GAChCyC,KAAKY,iBAAiBE,EAAI,EAAGvD,IAE3B0D,GADJlF,GAAK+E,GACQ/E,EACTmF,EAAKnF,EAAIkF,EACb,OAAQ,EAAIC,EAAK,EAAID,EAAK,GACxBtE,EAAE,IAAMuE,EAAK,EAAID,EAAKlF,GACtBd,EAAE,KAAO,EAAIiG,EAAK,EAAID,GACtBtE,EAAE,IAAMuE,EAAKD,GAAMhG,EAAE,IAxF3B,EAgGEqF,KAAA,SAAKvE,EAAGwB,GACNxB,GAAIiE,KAAKE,aAKT,IAJA,IAAIY,EAAI/D,KAAKgE,MAAMhF,GAEfoF,EAAOL,EAAId,KAAKU,gBAChBU,EAAM,EACD9E,EAHCwE,EAAId,KAAKU,gBAAkB,EAGnBpE,GAAK6E,EAAM7E,IAC3B8E,GAAOpB,KAAKW,QAAQ5E,EAAIO,GAAK0D,KAAKY,iBAAiBtE,EAAGiB,GAExD,OAAO6D,GAzGX,EAkHEJ,YAAA,SAAYF,EAAGvD,GACb,OAAOyC,KAAKO,gBACTP,KAAKY,iBAAiBE,EAAI,EAAGvD,GAC5ByC,KAAKY,iBAAiBE,EAAI,EAAGvD,IAAY,GArHjD,EA8HEqD,iBAAA,SAAiB7E,EAAGwB,GAClB,OAAK,GAAKxB,GAAKA,EAAIiE,KAAKC,QACf1C,EAAQxB,GAEV,GAlIX,KGAasF,EAAb,WAOE,WAAYC,EAAO7D,EAAY8D,GAC7B,IAAIC,EAAQ,EAAIzE,KAAKK,GAAKmE,EAAS9D,EAC/BgE,EAAK,EACTzB,KAAK0B,QAAU,GACf,IAAK,IAAI7G,EAAI,EAAGA,GAAKyG,EAAOzG,IACtBA,EAAIyG,EAAQ,GAAM,EACpBtB,KAAK0B,QAAQ7G,GAAK2G,GAElBxB,KAAK0B,QAAQ7G,GAAKkC,KAAKI,IAAIqE,GAAS3G,EAAIyG,EAAQ,KAAOzG,EAAIyG,EAAQ,GAEnEtB,KAAK0B,QAAQ7G,IAAO,IAAO,IAAOkC,KAAK4E,IAAI,EAAI5E,KAAKK,GAAKvC,EAAIyG,IAE/DG,GAAUzB,KAAK0B,QAAQ7G,GAGzB,IAAK,IAAIA,EAAI,EAAGA,GAAKyG,EAAOzG,IAC1BmF,KAAK0B,QAAQ7G,IAAM4G,EAErBzB,KAAK4B,EAAI5B,KAAK6B,SAzBlB,2BAgCEpD,OAAA,SAAOqD,GACL9B,KAAK4B,EAAEG,IAAI/B,KAAK4B,EAAEI,SAAWF,EAE7B,IADA,IAAIG,EAAM,EACDpH,EAAI,EAAG6D,EAAMsB,KAAK4B,EAAEG,IAAIlE,OAAQhD,EAAI6D,EAAK7D,IAChDoH,GACEjC,KAAK0B,QAAQ7G,GAAKmF,KAAK4B,EAAEG,KAAK/B,KAAK4B,EAAEI,QAAUnH,GAAKmF,KAAK4B,EAAEG,IAAIlE,QAGnE,OADAmC,KAAK4B,EAAEI,SAAWhC,KAAK4B,EAAEI,QAAU,GAAMhC,KAAK4B,EAAEG,IAAIlE,OAC7CoE,GAxCX,EA8CErD,MAAA,WACEoB,KAAK4B,EAAI5B,KAAK6B,UA/ClB,EAsDEA,OAAA,WAEE,IADA,IAAIlG,EAAI,GACCd,EAAI,EAAGA,EAAImF,KAAK0B,QAAQ7D,OAAS,EAAGhD,IAC3Cc,EAAEuG,KAAK,GAET,MAAO,CACLH,IAAKpG,EACLqG,QAAS,IA7Df,KFGM1D,EAAkB,CACtB,OAAS,EACT,QAAU,EACV,OAAS,EACT,MAAQ,GAOJS,EAAoB,CACxB,IAAO,GACP,IAAO,IAOHP,EAAc,CAClB,IGxBF,WAOE,WAAY8C,EAAO7D,EAAY8D,GAE7B,IADA,IAAIG,EAAU,GACL7G,EAAI,EAAGA,EAAIyG,EAAOzG,IACzB6G,EAAQQ,KAAKlC,KAAKmC,WAAW,CAC3BC,GAAI3E,EACJ4E,GAAId,EACJe,EAAG,GAAOvF,KAAKI,IAAKJ,KAAKK,IAAc,EAARkE,IAAezG,EAAI,QAGtDmF,KAAKuC,OAAS,GACd,IAAK,IAAI1H,EAAI,EAAGA,EAAI6G,EAAQ7D,OAAQhD,IAClCmF,KAAKuC,OAAO1H,GAAK,CACf2H,GAAKd,EAAQ7G,GAAG4H,EAAE,GAClBC,GAAKhB,EAAQ7G,GAAG4H,EAAE,GAClBE,GAAKjB,EAAQ7G,GAAG4H,EAAE,GAClBG,GAAKlB,EAAQ7G,GAAGgI,EAAE,GAClBC,GAAKpB,EAAQ7G,GAAGgI,EAAE,GAClB/B,EAAIY,EAAQ7G,GAAGiG,EACfc,EAAI,CAAC,EAAG,IAzBhB,2BAkCEnD,OAAA,SAAOqD,GAEL,IADA,IAAIG,EAAMH,EACDjH,EAAI,EAAG6D,EAAMsB,KAAKuC,OAAO1E,OAAQhD,EAAI6D,EAAK7D,IACjDoH,EAAMjC,KAAK+C,UAAUlI,EAAGoH,GAE1B,OAAOA,GAvCX,EA0CEE,WAAA,SAAWa,GACT,IAAIC,EAAS,CACbA,EAAW,CAAC,EAAG,GACfA,EAAW,GACXA,EAAW,IACPtG,EAAIqD,KAAKkD,SAASF,EAAQC,GAK9B,OAJAA,EAAOnC,EAAI,EACXmC,EAAOR,EAAEP,MAAM,EAAIvF,EAAEwG,KAAO,EAAIxG,EAAEyG,KAClCH,EAAOR,EAAEP,KAAK,EAAIe,EAAOR,EAAE,IAC3BQ,EAAOR,EAAEP,KAAKe,EAAOR,EAAE,IAChBQ,GApDX,EAuDEC,SAAA,SAASF,EAAQC,GACf,IAAII,EAAM,GACNC,EAAI,EAAIvG,KAAKK,GAAK4F,EAAOX,GAAKW,EAAOZ,GAQzC,OAPAiB,EAAIE,MAAQxG,KAAKI,IAAImG,IAAM,EAAIN,EAAOV,GACtCe,EAAIF,GAAKpG,KAAK4E,IAAI2B,GAClBD,EAAID,GAAK,EAAIC,EAAIE,MACjBN,EAAOG,GAAKC,EAAID,GAChBH,EAAOJ,EAAEX,MAAO,EAAImB,EAAIF,GAAME,EAAID,IAClCH,EAAOnC,EAAI,EACXmC,EAAOJ,EAAEX,MAAM,EAAImB,EAAIE,OAASF,EAAID,IAC7BC,GAjEX,EAoEEN,UAAA,SAAUlI,EAAG2I,GACX,IAAIC,EACFD,EAAQxD,KAAKuC,OAAO1H,GAAGiG,EAAId,KAAKuC,OAAO1H,GAAG+H,GAAK5C,KAAKuC,OAAO1H,GAAG+G,EAAE,GAChE5B,KAAKuC,OAAO1H,GAAGiI,GAAK9C,KAAKuC,OAAO1H,GAAG+G,EAAE,GACnCK,EACFjC,KAAKuC,OAAO1H,GAAG2H,GAAKiB,EAAOzD,KAAKuC,OAAO1H,GAAG6H,GAAK1C,KAAKuC,OAAO1H,GAAG+G,EAAE,GAChE5B,KAAKuC,OAAO1H,GAAG8H,GAAK3C,KAAKuC,OAAO1H,GAAG+G,EAAE,GAGvC,OAFA5B,KAAKuC,OAAO1H,GAAG+G,EAAE,GAAK5B,KAAKuC,OAAO1H,GAAG+G,EAAE,GACvC5B,KAAKuC,OAAO1H,GAAG+G,EAAE,GAAK6B,EACfxB,GA7EX,EAmFErD,MAAA,WACE,IAAK,IAAI/D,EAAI,EAAGA,EAAImF,KAAKuC,OAAO1E,OAAQhD,IACtCmF,KAAKuC,OAAO1H,GAAG+G,EAAI,CAAC,EAAG,IArF7B,KHyBE,IAAOP,GI1CMqC,EAjBf,SAAyBC,GAIvB,IAHA,IAAIvC,EAAM,EACJwC,EAAS,GACP/F,EAAW8F,EAAX9F,OACChD,EAAI,EAAGA,EAAIgD,EAAQhD,IAC1BuG,GAAO,KAAJ,IAAIuC,EAAU9I,GAAM,IAElBA,EAAI,GAAK,KAAQ,GACpB+I,EAAO1B,KAAKd,GACZA,EAAM,GACGvG,IAAMgD,EAAS,GACxB+F,EAAO1B,KAAKd,GAGhB,OAAOwC,GHoETC,KAAKC,iBAAiB,WAAW,SAAAC,GAAS,MAUpCA,EARF3E,KACE4E,EAHoC,EAGpCA,KAEAC,EALoC,EAKpCA,aACAC,EANoC,EAMpCA,gBACAC,EAPoC,EAOpCA,iBA2CJ,GAJa,iBAATH,GACFH,KAAKO,YAAYV,EAAgBxE,EAAW+E,KAGjC,QAATD,EAAgB,CAClB,IAAMzG,EAAUD,EACd4B,EAAW+E,GACXC,EACAC,GAEFN,KAAKO,YAvGT,SAAyBT,EAAWlG,EAAoB4G,QAAc,IAAlC5G,MAAa,YAAqB,IAAd4G,MAAW,GAEjE,IACMC,EAAS,IAAIC,YAA+B,EAAnBZ,EAAU9F,OADnB,IAGhB4B,EAAO,IAAI+E,SAASF,GAG1B9E,EAAcC,EAAM,EAAG,QAEvBA,EAAKgF,UAAU,EAAG,GAAwB,EAAnBd,EAAU9F,QAAY,GAE7C2B,EAAcC,EAAM,EAAG,QAGvBD,EAAcC,EAAM,GAAI,QAExBA,EAAKgF,UAAU,GAAI,IAAI,GAEvBhF,EAAKiF,UAAU,GAAI,GAAG,GAEtBjF,EAAKiF,UAAU,GAAIL,GAAU,GAE7B5E,EAAKgF,UAAU,GAAIhH,GAAY,GAE/BgC,EAAKgF,UAAU,GAAiB,EAAbhH,GAAgB,GAEnCgC,EAAKiF,UAAU,GAAe,EAAXL,GAAc,GAEjC5E,EAAKiF,UAAU,GAAI,IAAI,GAGvBlF,EAAcC,EAAM,GAAI,QAExBA,EAAKgF,UAAU,GAAuB,EAAnBd,EAAU9F,QAAY,GAMzC,IAHA,IAAI8G,EAAQ,GAEJ9G,EAAW8F,EAAX9F,OACChD,EAAI,EAAGA,EAAIgD,EAAQhD,IAC1B4E,EAAKmF,SAASD,EAAO,MAAAhB,EAAU9I,IAAwB,GACvD8J,GAAS,EAEX,OAAOL,EA2DYO,CAAgBtH,EAAS4G","file":"6c6e1c70113a922a6f6e.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/pc-pcm-wave/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"EIFZ\");\n","/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright 2012 Spencer Cohen\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview The Interpolator class. Based on Smooth.js by Spencer Cohen.\r\n * @see https://github.com/rochars/wave-resampler\r\n * @see https://github.com/osuushi/Smooth.js\r\n */\r\n\r\n/**\r\n * A class to get scaled values out of arrays.\r\n */\r\nexport class Interpolator {\r\n  \r\n  /**\r\n   * @param {number} scaleFrom the length of the original array.\r\n   * @param {number} scaleTo The length of the new array.\r\n   * @param {?Object} details The extra configuration, if needed.\r\n   */\r\n  constructor(scaleFrom, scaleTo, details) {\r\n    /**\r\n     * The length of the original array.\r\n     * @type {number}\r\n     */\r\n    this.length_ = scaleFrom;\r\n    /**\r\n     * The scaling factor.\r\n     * @type {number}\r\n     */\r\n    this.scaleFactor_ = (scaleFrom - 1) / scaleTo;\r\n    /**\r\n     * The interpolation function.\r\n     * @type {Function}\r\n     */\r\n    this.interpolate = this.cubic;\r\n    if (details.method === 'point') {\r\n    \tthis.interpolate = this.point;\r\n    } else if(details.method === 'linear') {\r\n    \tthis.interpolate = this.linear;\r\n    } else if(details.method === 'sinc') {\r\n    \tthis.interpolate = this.sinc;\r\n    }\r\n    /**\r\n     * The tanget factor for cubic interpolation.\r\n     * @type {number}\r\n     */\r\n    this.tangentFactor_ = 1 - Math.max(0, Math.min(1, details.tension || 0));\r\n    // Configure the kernel for sinc\r\n    /**\r\n     * The sinc filter size.\r\n     * @type {number}\r\n     */\r\n    this.sincFilterSize_ = details.sincFilterSize || 1;\r\n    /**\r\n     * The sinc kernel.\r\n     * @type {Function}\r\n     */\r\n    this.kernel_ = sincKernel_(details.sincWindow || window_);\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The index to interpolate.\r\n   * @param {Array|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   */\r\n  point(t, samples) {\r\n    return this.getClippedInput_(Math.round(this.scaleFactor_ * t), samples);\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The index to interpolate.\r\n   * @param {Array|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   */\r\n  linear(t, samples) {\r\n    t = this.scaleFactor_ * t;\r\n    let k = Math.floor(t);\r\n    t -= k;\r\n    return (1 - t) *\r\n    \tthis.getClippedInput_(k, samples) + t *\r\n    \tthis.getClippedInput_(k + 1, samples);\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The index to interpolate.\r\n   * @param {Array|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   */\r\n  cubic(t, samples) {\r\n    t = this.scaleFactor_ * t;\r\n    let k = Math.floor(t);\r\n    let m = [this.getTangent_(k, samples), this.getTangent_(k + 1, samples)];\r\n    let p = [this.getClippedInput_(k, samples),\r\n      this.getClippedInput_(k + 1, samples)];\r\n    t -= k;\r\n    let t2 = t * t;\r\n    let t3 = t * t2;\r\n    return (2 * t3 - 3 * t2 + 1) *\r\n      p[0] + (t3 - 2 * t2 + t) *\r\n      m[0] + (-2 * t3 + 3 * t2) *\r\n      p[1] + (t3 - t2) * m[1];\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The index to interpolate.\r\n   * @param {Array|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   */\r\n  sinc(t, samples) {\r\n    t = this.scaleFactor_ * t;\r\n    let k = Math.floor(t);\r\n    let ref = k - this.sincFilterSize_ + 1;\r\n    let ref1 = k + this.sincFilterSize_;\r\n    let sum = 0;\r\n    for (let n = ref; n <= ref1; n++) {\r\n      sum += this.kernel_(t - n) * this.getClippedInput_(n, samples);\r\n    }\r\n    return sum;\r\n  }\r\n\r\n  /**\r\n   * @param {number} k The scaled index to interpolate.\r\n   * @param {Array|TypedArray} samples the original array.\r\n   * @return {number} The tangent.\r\n   * @private\r\n   */\r\n  getTangent_(k, samples) {\r\n    return this.tangentFactor_ *\r\n      (this.getClippedInput_(k + 1, samples) -\r\n        this.getClippedInput_(k - 1, samples)) / 2;\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The scaled index to interpolate.\r\n   * @param {Array|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   * @private\r\n   */\r\n  getClippedInput_(t, samples) {\r\n    if ((0 <= t && t < this.length_)) {\r\n      return samples[t];\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n// Sinc functions\r\n\r\n/**\r\n * The default window function.\r\n * @param {number} x The sinc signal.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction window_(x) {\r\n  return Math.exp(-x / 2 * x / 2);\r\n}\r\n\r\n/**\r\n * @param {Function} window The window function.\r\n * @return {Function}\r\n * @private\r\n */\r\nfunction sincKernel_(window) {\r\n  return function(x) { return sinc_(x) * window(x); };\r\n}\r\n\r\n/**\r\n * @param {number} x The sinc signal.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction sinc_(x) {\r\n  if (x === 0) {\r\n    return 1;\r\n  }\r\n  return Math.sin(Math.PI * x) / (Math.PI * x);\r\n}\r\n\r\n","/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview The resample function.\r\n * @see https://github.com/rochars/wave-resampler\r\n */\r\n\r\nimport { Interpolator } from './lib/interpolator';\r\nimport { FIRLPF } from './lib/fir-lpf';\r\nimport { ButterworthLPF } from './lib/butterworth-lpf';\r\n\r\n/**\r\n * Configures wich resampling method uses LPF by default.\r\n * @private\r\n */\r\nconst DEFAULT_LPF_USE = {\r\n  'point': false,\r\n  'linear': false,\r\n  'cubic': true,\r\n  'sinc': true\r\n};\r\n\r\n/**\r\n * The default orders for the LPF types.\r\n * @private\r\n */\r\nconst DEFAULT_LPF_ORDER = {\r\n  'IIR': 16,\r\n  'FIR': 71\r\n};\r\n\r\n/**\r\n * The classes to use with each LPF type.\r\n * @private\r\n */\r\nconst DEFAULT_LPF = {\r\n  'IIR': ButterworthLPF,\r\n  'FIR': FIRLPF\r\n};\r\n\r\n/**\r\n * Change the sample rate of the samples to a new sample rate.\r\n * @param {!Array|!TypedArray} samples The original samples.\r\n * @param {number} oldSampleRate The original sample rate.\r\n * @param {number} sampleRate The target sample rate.\r\n * @param {?Object} details The extra configuration, if needed.\r\n * @return {!Float64Array} the new samples.\r\n */\r\nexport function resample(samples, oldSampleRate, sampleRate, details={}) {  \r\n  // Make the new sample container\r\n  let rate = ((sampleRate - oldSampleRate) / oldSampleRate) + 1;\r\n  let newSamples = new Float64Array(samples.length * (rate));\r\n  // Create the interpolator\r\n  details.method = details.method || 'cubic';\r\n  let interpolator = new Interpolator(\r\n    samples.length,\r\n    newSamples.length,\r\n    {\r\n      method: details.method,\r\n      tension: details.tension || 0,\r\n      sincFilterSize: details.sincFilterSize || 6,\r\n      sincWindow: details.sincWindow || undefined\r\n    });\r\n  // Resample + LPF\r\n  if (details.LPF === undefined) {\r\n    details.LPF = DEFAULT_LPF_USE[details.method];\r\n  } \r\n  if (details.LPF) {\r\n    details.LPFType = details.LPFType || 'IIR';\r\n    const LPF = DEFAULT_LPF[details.LPFType];\r\n    // Upsampling\r\n    if (sampleRate > oldSampleRate) {\r\n      let filter = new LPF(\r\n        details.LPFOrder || DEFAULT_LPF_ORDER[details.LPFType],\r\n        sampleRate,\r\n        (oldSampleRate / 2));\r\n      upsample_(\r\n        samples, newSamples, interpolator, filter);\r\n    // Downsampling\r\n    } else {\r\n      let filter = new LPF(\r\n        details.LPFOrder || DEFAULT_LPF_ORDER[details.LPFType],\r\n        oldSampleRate,\r\n        sampleRate / 2);\r\n      downsample_(\r\n        samples, newSamples, interpolator, filter);\r\n    }\r\n  // Resample, no LPF\r\n  } else {\r\n    resample_(samples, newSamples, interpolator);\r\n  }\r\n  return newSamples;\r\n}\r\n\r\n/**\r\n * Resample.\r\n * @param {!Array|!TypedArray} samples The original samples.\r\n * @param {!Float64Array} newSamples The container for the new samples.\r\n * @param {Object} interpolator The interpolator.\r\n * @private\r\n */\r\nfunction resample_(samples, newSamples, interpolator) {\r\n  // Resample\r\n  for (let i = 0, len = newSamples.length; i < len; i++) {\r\n    newSamples[i] = interpolator.interpolate(i, samples);\r\n  }\r\n}\r\n\r\n/**\r\n * Upsample with LPF.\r\n * @param {!Array|!TypedArray} samples The original samples.\r\n * @param {!Float64Array} newSamples The container for the new samples.\r\n * @param {Object} interpolator The interpolator.\r\n * @param {Object} filter The LPF object.\r\n * @private\r\n */\r\nfunction upsample_(samples, newSamples, interpolator, filter) {\r\n  // Resample and filter\r\n  for (let i = 0, len = newSamples.length; i < len; i++) {\r\n    newSamples[i] = filter.filter(interpolator.interpolate(i, samples));\r\n  }\r\n  // Reverse filter\r\n  filter.reset();\r\n  for (let i = newSamples.length - 1; i >= 0; i--) {\r\n    newSamples[i]  = filter.filter(newSamples[i]);\r\n  }\r\n}\r\n\r\n/**\r\n * Downsample with LPF.\r\n * @param {!Array|!TypedArray} samples The original samples.\r\n * @param {!Float64Array} newSamples The container for the new samples.\r\n * @param {Object} interpolator The interpolator.\r\n * @param {Object} filter The LPF object.\r\n * @private\r\n */\r\nfunction downsample_(samples, newSamples, interpolator, filter) {\r\n  // Filter\r\n  for (let i = 0, len = samples.length; i < len; i++) {\r\n    samples[i]  = filter.filter(samples[i]);\r\n  }\r\n  // Reverse filter\r\n  filter.reset();\r\n  for (let i = samples.length - 1; i >= 0; i--) {\r\n    samples[i]  = filter.filter(samples[i]);\r\n  }\r\n  // Resample\r\n  resample_(samples, newSamples, interpolator);\r\n}\r\n","// import { Mp3Encoder } from 'lamejs'\nimport { resample } from 'wave-resampler'\n// import { encode as base64Encode } from 'base64-arraybuffer'\nimport shortTimeEnergy from './shortTimeEnergy'\n\nfunction mergeArray(list) {\n  const length = list.length * list[0].length\n  const data = new Float32Array(length)\n  let offset = 0\n  for (let i = 0; i < list.length; i++) {\n    data.set(list[i], offset)\n    offset += list[i].length\n  }\n  return data\n}\n\n// function float32ToInt16(audioBuffers, inputSampleRate, outputSampleRate) {\n//   const float32 = resample(\n//     mergeArray(audioBuffers),\n//     inputSampleRate,\n//     outputSampleRate,\n//   )\n//   const int16 = Int16Array.from(\n//     float32.map(x => (x > 0 ? x * 0x7fff : x * 0x8000)),\n//   )\n//   return int16\n// }\n\nfunction writeUTFBytes(view, offset, string) {\n  var lng = string.length\n  for (let i = 0; i < lng; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i))\n  }\n}\n\nfunction createWavBuffer(audioData, sampleRate = 44100, channels = 1) {\n  // audioData = mergeArray(audioData)\n  const WAV_HEAD_SIZE = 44\n  const buffer = new ArrayBuffer(audioData.length * 2 + WAV_HEAD_SIZE)\n  // 需要用一个view来操控buffer\n  const view = new DataView(buffer)\n  // 写入wav头部信息\n  // RIFF chunk descriptor/identifier\n  writeUTFBytes(view, 0, 'RIFF')\n  // RIFF chunk length\n  view.setUint32(4, 44 + audioData.length * 2, true)\n  // RIFF type\n  writeUTFBytes(view, 8, 'WAVE')\n  // format chunk identifier\n  // FMT sub-chunk\n  writeUTFBytes(view, 12, 'fmt ')\n  // format chunk length\n  view.setUint32(16, 16, true)\n  // sample format (raw)\n  view.setUint16(20, 1, true)\n  // stereo (2 channels)\n  view.setUint16(22, channels, true)\n  // sample rate\n  view.setUint32(24, sampleRate, true)\n  // byte rate (sample rate * block align)\n  view.setUint32(28, sampleRate * 2, true)\n  // block align (channel count * bytes per sample)\n  view.setUint16(32, channels * 2, true)\n  // bits per sample\n  view.setUint16(34, 16, true)\n  // data sub-chunk\n  // data chunk identifier\n  writeUTFBytes(view, 36, 'data')\n  // data chunk length\n  view.setUint32(40, audioData.length * 2, true)\n\n  // 写入PCM数据\n  let index = 44\n  const volume = 1\n  const { length } = audioData\n  for (let i = 0; i < length; i++) {\n    view.setInt16(index, audioData[i] * (0x7fff * volume), true)\n    index += 2\n  }\n  return buffer\n}\n\nself.addEventListener('message', event => {\n  const {\n    data: {\n      type,\n      // format,\n      audioBuffers,\n      inputSampleRate,\n      outputSampleRate,\n      // kbps = 64,\n    },\n  } = event\n\n  // if (type === 'int16') {\n  //   const int16 = float32ToInt16(\n  //     audioBuffers,\n  //     inputSampleRate,\n  //     outputSampleRate,\n  //   )\n  //   self.postMessage(format === 'base64' ? base64Encode(int16.buffer) : int16)\n  // }\n\n  // if (type === 'mp3') {\n  //   let mp3buf\n  //   const mp3Data = []\n  //   const sampleBlockSize = 576 * 10\n  //   const mp3Encoder = new Mp3Encoder(1, outputSampleRate, kbps)\n  //   const samples = float32ToInt16(\n  //     audioBuffers,\n  //     inputSampleRate,\n  //     outputSampleRate,\n  //   )\n\n  //   let remaining = samples.length\n  //   for (let i = 0; remaining >= 0; i += sampleBlockSize) {\n  //     const left = samples.subarray(i, i + sampleBlockSize)\n  //     mp3buf = mp3Encoder.encodeBuffer(left)\n  //     mp3Data.push(new Int8Array(mp3buf))\n  //     remaining -= sampleBlockSize\n  //   }\n\n  //   mp3Data.push(new Int8Array(mp3Encoder.flush()))\n\n  //   self.postMessage(format === 'base64' ? base64Encode(mp3Data) : mp3Data)\n  //   mp3Data.length = 0\n  // }\n\n  if (type === 'short-energy') {\n    self.postMessage(shortTimeEnergy(mergeArray(audioBuffers)))\n  }\n\n  if (type === 'wav') {\n    const samples = resample(\n      mergeArray(audioBuffers),\n      inputSampleRate,\n      outputSampleRate,\n    )\n    self.postMessage(createWavBuffer(samples, outputSampleRate))\n  }\n})\n","/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2014 Florian Markert\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview FIR LPF. Based on the FIR LPF from Fili by Florian Markert.\r\n * @see https://github.com/rochars/wave-resampler\r\n * @see https://github.com/markert/fili.js\r\n */\r\n\r\n/**\r\n * A FIR low pass filter.\r\n */\r\nexport class FIRLPF {\r\n  \r\n  /**\r\n   * @param {number} order The order of the filter.\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} cutOff The cut off frequency.\r\n   */\r\n  constructor(order, sampleRate, cutOff) {\r\n    let omega = 2 * Math.PI * cutOff / sampleRate;\r\n    let dc = 0;\r\n    this.filters = [];\r\n    for (let i = 0; i <= order; i++) {\r\n      if (i - order / 2 === 0) {\r\n        this.filters[i] = omega;\r\n      } else {\r\n        this.filters[i] = Math.sin(omega * (i - order / 2)) / (i - order / 2);\r\n        // Hamming window\r\n        this.filters[i] *= (0.54 - 0.46 * Math.cos(2 * Math.PI * i / order));\r\n      }\r\n      dc = dc + this.filters[i];\r\n    }\r\n    // normalize\r\n    for (let i = 0; i <= order; i++) {\r\n      this.filters[i] /= dc;\r\n    }\r\n    this.z = this.initZ_();\r\n  }\r\n\r\n  /**\r\n   * @param {number} sample A sample of a sequence.\r\n   * @return {number}\r\n   */\r\n  filter(sample) {\r\n    this.z.buf[this.z.pointer] = sample;\r\n    let out = 0;\r\n    for (let i = 0, len = this.z.buf.length; i < len; i++) {\r\n      out += (\r\n        this.filters[i] * this.z.buf[(this.z.pointer + i) % this.z.buf.length]);\r\n    }\r\n    this.z.pointer = (this.z.pointer + 1) % (this.z.buf.length);\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Reset the filter.\r\n   */\r\n  reset() {\r\n    this.z = this.initZ_();\r\n  }\r\n\r\n  /**\r\n   * Return the default value for z.\r\n   * @private\r\n   */\r\n  initZ_() {\r\n    let r = [];\r\n    for (let i = 0; i < this.filters.length - 1; i++) {\r\n      r.push(0);\r\n    }\r\n    return {\r\n      buf: r,\r\n      pointer: 0\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2014 Florian Markert\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview Butterworth LPF. Based on the Butterworth LPF from Fili.js.\r\n * @see https://github.com/rochars/wave-resampler\r\n * @see https://github.com/markert/fili.js\r\n */\r\n\r\n/**\r\n * Butterworth LPF.\r\n */\r\nexport class ButterworthLPF {\r\n  \r\n  /**\r\n   * @param {number} order The order of the filter.\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} cutOff The cut off frequency.\r\n   */\r\n  constructor(order, sampleRate, cutOff) {\r\n    let filters = [];\r\n    for (let i = 0; i < order; i++) {\r\n      filters.push(this.getCoeffs_({\r\n        Fs: sampleRate,\r\n        Fc: cutOff,\r\n        Q: 0.5 / (Math.sin((Math.PI / (order * 2)) * (i + 0.5)))\r\n      }));\r\n    }\r\n    this.stages = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      this.stages[i] = {\r\n        b0 : filters[i].b[0],\r\n        b1 : filters[i].b[1],\r\n        b2 : filters[i].b[2],\r\n        a1 : filters[i].a[0],\r\n        a2 : filters[i].a[1],\r\n        k : filters[i].k,\r\n        z : [0, 0]\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} sample A sample of a sequence.\r\n   * @return {number}\r\n   */\r\n  filter(sample) {\r\n    let out = sample;\r\n    for (let i = 0, len = this.stages.length; i < len; i++) {\r\n      out = this.runStage_(i, out);\r\n    }\r\n    return out;\r\n  }\r\n\r\n  getCoeffs_(params) {\r\n    let coeffs = {};\r\n    coeffs.z = [0, 0];\r\n    coeffs.a = [];\r\n    coeffs.b = [];\r\n    let p = this.preCalc_(params, coeffs);\r\n    coeffs.k = 1;\r\n    coeffs.b.push((1 - p.cw) / (2 * p.a0));\r\n    coeffs.b.push(2 * coeffs.b[0]);\r\n    coeffs.b.push(coeffs.b[0]);\r\n    return coeffs;\r\n  }\r\n\r\n  preCalc_(params, coeffs) {\r\n    let pre = {};\r\n    let w = 2 * Math.PI * params.Fc / params.Fs;\r\n    pre.alpha = Math.sin(w) / (2 * params.Q);\r\n    pre.cw = Math.cos(w);\r\n    pre.a0 = 1 + pre.alpha;\r\n    coeffs.a0 = pre.a0;\r\n    coeffs.a.push((-2 * pre.cw) / pre.a0);\r\n    coeffs.k = 1;\r\n    coeffs.a.push((1 - pre.alpha) / pre.a0);\r\n    return pre;\r\n  }\r\n  \r\n  runStage_(i, input) {\r\n    let temp =\r\n      input * this.stages[i].k - this.stages[i].a1 * this.stages[i].z[0] -\r\n      this.stages[i].a2 * this.stages[i].z[1];\r\n    let out =\r\n      this.stages[i].b0 * temp + this.stages[i].b1 * this.stages[i].z[0] +\r\n      this.stages[i].b2 * this.stages[i].z[1];\r\n    this.stages[i].z[1] = this.stages[i].z[0];\r\n    this.stages[i].z[0] = temp;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Reset the filter.\r\n   */\r\n  reset() {\r\n    for (let i = 0; i < this.stages.length; i++) {\r\n      this.stages[i].z = [0, 0];\r\n    }\r\n  }\r\n}\r\n","function shortTimeEnergy(audioData) {\n  let sum = 0\n  const energy = []\n  const { length } = audioData\n  for (let i = 0; i < length; i++) {\n    sum += audioData[i] ** 2\n\n    if ((i + 1) % 256 === 0) {\n      energy.push(sum)\n      sum = 0\n    } else if (i === length - 1) {\n      energy.push(sum)\n    }\n  }\n  return energy\n}\n\nexport default shortTimeEnergy\n"],"sourceRoot":""}